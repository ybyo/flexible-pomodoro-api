version: '3'

networks:
  app-tier:
    driver: bridge

services:
  mysql-pt:
    image: mysql:8
    env_file:
      - ./env/.${NODE_ENV}.env
    container_name: mysql
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - app-tier

  redis-pt:
    image: bitnami/redis:latest
    env_file:
      - ./env/.${NODE_ENV}.env
    environment:
      - ALLOW_EMPTY_PASSWORD=${ALLOW_EMPTY_PASSWORD}
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - app-tier

  backend-pt:
    image: backend-pt
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
    env_file:
      - ./env/.${NODE_ENV}.env
    environment:
      - DATABASE_HOST=mysql
      - REDIS_URL=redis
      - NODE_ENV=${NODE_ENV}
    container_name: backend
    ports:
      - ${API_PORT}:${API_PORT}
    volumes:
      - ./certs/:/certs:ro
    networks:
      - app-tier
    depends_on: [mysql-pt, redis-pt]

  nginx-pt:
    image: nginx-pt
    build:
      context: ../pipe-timer-frontend
      dockerfile: ./Dockerfile
      args:
        ENV_NAME_ARG: ${NODE_ENV}
        FRONT_URL_ARG: ${FRONT_URL}
    env_file:
      - ../pipe-timer-frontend/env/.${NODE_ENV}.env
    environment:
      NODE_ENV: ${NODE_ENV}
      FRONT_URL: ${FRONT_URL}
      UPSTREAM_BACKEND: ${UPSTREAM_BACKEND}
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
    container_name: frontend
    ports:
      - ${NGINX_EXTERNAL_PORT}:${NGINX_INTERNAL_PORT}
    volumes:
      - ../pipe-timer-frontend/certs/:/etc/nginx/certs/:ro
      - ./public:/public:ro
    networks:
      - app-tier
    depends_on: [mysql-pt, redis-pt, backend-pt]
