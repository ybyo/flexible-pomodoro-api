networks:
  app-tier:
    driver: bridge

services:
  mysql-pt:
    image: mysql:8
    env_file:
      - env/.${NODE_ENV}.env
    container_name: mysql
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./backend/mysql:/var/lib/mysql
    networks:
      - app-tier
    profiles:
      - local

  redis-pt:
    image: bitnami/redis:latest
    env_file:
      - env/.${NODE_ENV}.env
    environment:
      - ALLOW_EMPTY_PASSWORD=${ALLOW_EMPTY_PASSWORD}
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - app-tier
    profiles:
      - local

  backend-pt:
    image: backend-pt
    build:
      platforms:
        - ${PLATFORM}
      context: ./
      dockerfile: ./backend/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        API_PORT_1: ${API_PORT_1}
        API_PORT_2: ${API_PORT_2}
        API_PORT_3: ${API_PORT_3}
      tags:
        - ${DOCKER_REGISTRY}/pipe-timer-backend:${NODE_ENV}
    env_file:
      - env/.${NODE_ENV}${LOCAL}.env
    container_name: backend
    ports:
      - ${API_PORT_0}:${API_PORT_0}
    volumes:
      - ./env:/env
      - ./backend/certs:/certs:ro
    networks:
      - app-tier
    depends_on: [mysql-pt, redis-pt]

  nginx-pt:
    image: nginx-pt
    build:
      platforms:
        - ${PLATFORM}
      context: ./
      dockerfile: ./frontend/Dockerfile
      args:
        ENV_NAME: ${ENV_NAME}
        LOCAL: ${LOCAL}
        HOST_URL: ${HOST_URL}
        FRONT_PORT_1: ${FRONT_PORT_1}
        FRONT_PORT_2: ${FRONT_PORT_2}
        API_PORT_3: ${API_PORT_3}
      tags:
        - ${DOCKER_REGISTRY}/pipe-timer-frontend:${NODE_ENV}
    env_file:
      - env/.${NODE_ENV}${LOCAL}.env
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
    container_name: frontend
    ports:
      - ${FRONT_PORT_0}:${FRONT_PORT_2}
    volumes:
      - ./env:/env
      - ./frontend/certs/:/etc/nginx/certs/
      - ./frontend/public:/public
    networks:
      - app-tier
    depends_on: [mysql-pt, redis-pt, backend-pt]

  mysql-test:
    image: mysql:8
    env_file:
      - env/.${NODE_ENV}.env
    container_name: mysql-test
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_TEST_PORT}:${DB_PORT}
    networks:
      - app-tier
    profiles:
      - test

  redis-test:
    image: bitnami/redis:latest
    env_file:
      - env/.${NODE_ENV}.env
    environment:
      - ALLOW_EMPTY_PASSWORD=${ALLOW_EMPTY_PASSWORD}
    container_name: redis-test
    ports:
      - ${REDIS_TEST_PORT}:${REDIS_PORT}
    networks:
      - app-tier
    profiles:
      - test
