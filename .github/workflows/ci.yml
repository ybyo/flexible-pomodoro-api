name: ci-main

on:
  pull_request:
    branches:
      - main
      - staging
      - production

permissions:
  pull-requests: write

env:
  NODE_ENV: ${{ github.base_ref == 'main' && 'production' || github.base_ref }}
  TF_LOG: ERROR
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  GITHUB_RUN_ATTEMPT: 3

jobs:
  build-setup:
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Import Secrets
        id: import-secrets
        uses: hashicorp/vault-action@v2.7.1
        with:
          url: https://${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: pt/env/${{ env.NODE_ENV }} $.$;

      - name: Secrets to json
        run: |
          touch secrets.json
          echo "${{ toJson(steps.import-secrets.outputs) }}" > secrets.json

      - name: Json to dotenv
        run: |
          mkdir -p ./env
          touch ./env/.${{ env.NODE_ENV }}.env
          awk -F '[:,]' '/__/{ gsub(/ |\042|\{|\}/,""); gsub(/\$/,"\\$"); print $2 "=" $3}' secrets.json > ./env/.${{ env.NODE_ENV }}.env

      - name: Install dependencies
        run: npm i --production=false

      - name: Install dummy certs for test
        run: sudo apt update && sh shared/helper/create-local-certs.sh -y

      - name: Test backend
        run: npm run test -w backend

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dotenv
          path: ./env/.${{ env.NODE_ENV }}.env

  deploy:
    needs: build-setup
    runs-on: ubuntu-20.04
    env:
      TERRAFORM_PATH: ./infra/tf/${{ env.NODE_ENV }}/applications
    strategy:
      matrix:
        workdir: ['backend', 'frontend']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: hashicorp/setup-terraform@v1.4.0
      - name: Install Dependencies
        run: npm i -g cross-env

      - name: Import Secrets
        id: import-secrets
        uses: hashicorp/vault-action@v2.7.1
        with:
          url: https://${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            pt/env/${{ env.NODE_ENV }} AWS_REGION | AWS_REGION;
            pt/env/${{ env.NODE_ENV }} AWS_ACCESS_KEY_ID | AWS_ACCESS_KEY_ID;
            pt/env/${{ env.NODE_ENV }} AWS_SECRET_ACCESS_KEY | AWS_SECRET_ACCESS_KEY;

      - name: Import Certificates
        id: import-certificates
        uses: hashicorp/vault-action@v2.7.1
        with:
          url: https://${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            pt/ssl SSL_PUBLIC_KEY | SSL_PUBLIC_KEY ;
            pt/ssl SSL_PRIVATE_KEY | SSL_PRIVATE_KEY ;

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dotenv
          path: ./env

      - name: Terraform Init
        id: init
        run: terraform -chdir=${{ env.TERRAFORM_PATH }}/${{ matrix.workdir }} init
        continue-on-error: false

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=${{ env.TERRAFORM_PATH }}/${{ matrix.workdir }} validate -no-color
        continue-on-error: false

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=${{ env.TERRAFORM_PATH }}/${{ matrix.workdir }} plan
        continue-on-error: true

      - name: Terraform Apply
        run: terraform -chdir=${{ env.TERRAFORM_PATH }}/${{ matrix.workdir }} apply -auto-approve
