user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
  resolver 127.0.0.11 valid=10s;


  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  client_max_body_size 0;

  server_names_hash_bucket_size 128;
  charset utf-8;

  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options "nosniff";

  resolver_timeout 10s;

  upstream registry {
    server registry:${REGISTRY_PORT};
  }

  upstream grafana {
    server grafana:${GF_SERVER_HTTP_PORT};
  }

  upstream prometheus {
    server prometheus:${PROMETHEUS_PORT};
  }

  upstream loki {
    server loki:${LOKI_PORT};
  }

  upstream vault {
    server vault:${VAULT_PORT};
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name ${GF_SERVER_DOMAIN};
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:AEAD-AES256-GCM-SHA384:AEAD-AES128-GCM-SHA256;

    ssl_certificate /etc/nginx/certs/local-cert.pem;
    ssl_certificate_key /etc/nginx/certs/local-key.pem;

    location / {
      proxy_set_header Host $http_host;
      proxy_pass https://grafana;
    }

    root /usr/share/nginx/html;
    index index.html index.htm;
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name ${LOKI_URL};
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:AEAD-AES256-GCM-SHA384:AEAD-AES128-GCM-SHA256;

    ssl_certificate /etc/nginx/certs/local-cert.pem;
    ssl_certificate_key /etc/nginx/certs/local-key.pem;

    location / {
      proxy_set_header Host $http_host;
      proxy_pass https://loki;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name ${PROMETHEUS_DOMAIN};
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:AEAD-AES256-GCM-SHA384:AEAD-AES128-GCM-SHA256;

    ssl_certificate /etc/nginx/certs/local-cert.pem;
    ssl_certificate_key /etc/nginx/certs/local-key.pem;

    location / {
      proxy_set_header Host $http_host;
      proxy_pass https://prometheus;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name ${REGISTRY_DOMAIN};
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:AEAD-AES256-GCM-SHA384:AEAD-AES128-GCM-SHA256;

    ssl_certificate /etc/nginx/certs/local-cert.pem;
    ssl_certificate_key /etc/nginx/certs/local-key.pem;

    location / {
      proxy_pass https://registry;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name ${VAULT_URL};
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:AEAD-AES256-GCM-SHA384:AEAD-AES128-GCM-SHA256;

    ssl_certificate /etc/nginx/certs/local-cert.pem;
    ssl_certificate_key /etc/nginx/certs/local-key.pem;

    location / {
      proxy_pass https://vault/;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
    }
  }

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/nginx-error.log;

  keepalive_timeout  60s;
  include /etc/nginx/conf.d/*.conf;
}
