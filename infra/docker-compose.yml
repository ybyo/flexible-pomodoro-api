services:
  registry:
    image: registry:2
    container_name: registry
    env_file:
      - ../env/.staging.env
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/local-cert.pem
      REGISTRY_HTTP_TLS_KEY: /certs/local-key.pem
      REGISTRY_STORAGE_DELETE_ENABLED: true
    ports:
      - ${REGISTRY_PORT}:${REGISTRY_PORT}
    volumes:
      - ./registry/auth:/auth
      - ./certs:/certs
    restart: on-failure
    networks:
      - pipe-timer

  prometheus:
    image: bitnami/prometheus
    container_name: prometheus
    ports:
      - ${PROMETHEUS_PORT}:${PROMETHEUS_PORT}
    volumes:
      - ./monitoring/config/prometheus.yml:/opt/bitnami/prometheus/prometheus.yml
      - ./monitoring/config/web-config-prom.yml:/opt/node_exporter/web-config.prom.yml
      - ./certs:/certs
    command:
      - --web.config.file=/opt/node_exporter/web-config.prom.yml
    restart: on-failure
    networks:
      - pipe-timer

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - ${GF_SERVER_HTTP_PORT}:${GF_SERVER_HTTP_PORT}
    env_file:
      - ../env/.staging.env
    volumes:
      - ./certs:/certs
      - ./monitoring/config/grafana.ini:/etc/grafana/grafana.ini
    restart: on-failure
    networks:
      - pipe-timer-network

  nginx-local:
    image: nginx:latest
    container_name: nginx-local
    env_file:
      - ../env/.staging.env
    ports:
      - 443:443
    volumes:
      - ./registry/nginx.conf:/etc/nginx/templates/nginx.conf.template
      - ./certs:/etc/nginx/certs
    restart: on-failure
    networks:
      - pipe-timer

networks:
  pipe-timer-network:
    driver: bridge
    name: pipe-timer
