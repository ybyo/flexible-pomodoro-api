user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

# TODO: Session persistence 추가
# TODO: Health Checks 추가
http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  server_names_hash_bucket_size 128;

  charset utf-8;
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";
  add_header X-Content-Type-Options "nosniff";

  resolver_timeout 10s;

  upstream backend {
      least_conn;
      server ${UPSTREAM_BACKEND}:3000;
  }

  server {
      listen 80 default_server;
      listen [::]:80 default_server;

      server_name ${HOST_RUL};
      server_tokens off;

      return 308 https://$server_name$request_uri;
  }

  server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name ${HOST_URL};
    port_in_redirect off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA";

    ssl_certificate /etc/nginx/certs/dev-cert.pem;
    ssl_certificate_key /etc/nginx/certs/dev-key.pem;

    root /usr/share/nginx/html;
    index index.html;

    location /api/ {
        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1.3;
        proxy_pass https://backend;
        rewrite  ^/api/(.*) /$1 break;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Connection "";
    }

    location / {
      try_files $uri $uri/ /index.html;

      proxy_read_timeout 300s;
      proxy_connect_timeout 75s;
    }

    location = /robots.txt  { access_log off; log_not_found off; }
    location ~ /\.(?!well-known).* { deny all; }

    access_log off;
  }

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  error_log  /var/log/nginx/nginx-error.log error;

  sendfile on;
  keepalive_timeout  60s;
  include /etc/nginx/conf.d/*.conf;
}
